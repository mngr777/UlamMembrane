local constant Bool cDEBUG = Exec.cDEBUG;

transient EvalConditional : Eval {
  constant Symbol cIF_ZERO          = 0x1;
  constant Symbol cIF_NOT_ZERO      = 0x2;
  constant Symbol cIF_ATTACHED      = 0x9;
  constant Symbol cIF_ATTACHED_NEXT = 0xa;

  Arity getArity(Symbol symbol) {
    return 2;
  }

  Arity getArgNum(Symbol symbol) {
    return 0;
  }

  Arity eval(Exec& exec, Symbol symbol, Byte arg) {
    DebugUtils du;
    Bool cond = false;

    if (symbol == cIF_ZERO) {
      if (cDEBUG) dbg.print("(if-zero)");
      cond = (exec.getInteger(Exec.cREG1) == 0);

    } else if (symbol == cIF_NOT_ZERO) {
      if (cDEBUG) dbg.print("(if-not-zero)");
      cond = (exec.getInteger(Exec.cREG1) != 0);

    } else if (symbol == cIF_ATTACHED) {
      if (cDEBUG) dbg.print("(if-attached)");
      cond = exec.getBond(getBondIndex(exec, cSRC)).isAttached();

    } else if (symbol == cIF_ATTACHED_NEXT) {
      if (cDEBUG) dbg.print("(if-attached-next)");
      QBond& bond = exec.getBond(getBondIndex(exec, cSRC));
      if (bond.isAttached()) {
        Index nextIndex = getBondIndex(exec, cDST);
        SiteNum site = bond.getSiteNumber();
        IBondable& bondable = (IBondable&) ew[site];
        cond = bondable.getBond(nextIndex).isAttached();
      }

    }

    if (getArgNum(symbol) == 1)
      return cond ? 1u : Arity.maxof;
    return cond ? 0u : 1u;
  }
}
