transient EvalBlock : Eval {
  constant Symbol cWITH_INPUT  = 0x1;
  constant Symbol cWITH_OUTPUT = 0x2;

  Arity getArity(Symbol symbol) {
    return 1;
  }

  Arity getArgNum(Symbol symbol) {
    return 0;
  }

  Void enter(Exec& exec, Package& tree, Byte arg) {
    Symbol symbol = pd.getSymbol(tree.getData());

    if (symbol == cWITH_INPUT ||
        symbol == cWITH_OUTPUT)
    {
      QBond.Index index;
      if (symbol == cWITH_INPUT) {
        if (cDEBUG) dbg.print("(with-output)");
        index = Exec.cINPUT;
      } else {
        if (cDEBUG) dbg.print("(with-input)");
        index = Exec.cOUTPUT;
      }

      Byte old = exec.get(Exec.cSRC);
      exec.set(Exec.cSRC, (Byte) index);

      // Store old value in tree node
      Datum result = tree.getAux();
      result = pd.setValue(result, old);
    }
  }

  Void exit(Exec& exec, Package& tree, Byte arg) {
    Symbol symbol = pd.getSymbol(tree.getData());

    if (symbol == cWITH_INPUT ||
        symbol == cWITH_OUTPUT)
    {
      if (cDEBUG) {
        if (symbol == cWITH_INPUT) {
          dbg.print(";; (with-input)");
        } else {
          dbg.print(";; (with-output)");
        }
      }

      // Restore old value
      Datum result = tree.getAux();
      Byte old = pd.getValue(result);
      exec.set(Exec.cSRC, old);
    }
  }
}
